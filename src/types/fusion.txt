export interface ApiError {
  error: boolean;
  message: string;
  statusCode: number;
  errors?: Record<string, string[]>;
  debug?: {
    exception: string;
    file: string;
    line: number;
    trace: string;
  };
}

export interface PaginationMeta {
  page: number;
  limit: number;
  total: number;
  pages: number;
}

export interface PaginatedResponse<T> {
  data: T[];
  pagination: PaginationMeta;
}

// eslint-disable-next-line @typescript-eslint/no-explicit-any
export interface ApiResponse<T = any> {
  message?: string;
  data?: T;
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  user?: any;
  count?: number;
}

export interface LoginResponse {
  user: {
    id: number;
    email: string;
    nom: string;
    prenom: string;
    roles: string[];
  };
}

export interface RegisterResponse {
  message: string;
  user: {
    id: number;
    email: string;
    nom: string;
    prenom: string;
  };
}import type { User } from './user';
import type { Voyage } from './voyage';

export interface Avis {
  id: number;
  auteur: User;
  cible: User;
  voyage: Voyage | null;
  note: number;
  commentaire: string | null;
  createdAt: string;
  updatedAt: string;
}

export interface CreateAvisInput {
  cibleId: number;
  voyageId?: number;
  note: number;
  commentaire?: string;
}

export interface AvisStats {
  total: number;
  average: number;
  distribution: {
    1: number;
    2: number;
    3: number;
    4: number;
    5: number;
  };
}

export interface AvisWithStats {
  avis: Avis[];
  stats: AvisStats;
}import type { User } from './user';

export type DemandeStatut = 'en_recherche' | 'voyageur_trouve' | 'annulee';

export interface Demande {
  id: number;
  client: User;
  villeDepart: string;
  villeArrivee: string;
  dateLimite: string | null;
  poidsEstime: string;
  description: string;
  statut: DemandeStatut;
  createdAt: string;
  updatedAt: string;
}

export interface CreateDemandeInput {
  villeDepart: string;
  villeArrivee: string;
  dateLimite?: string;
  poidsEstime: number;
  description: string;
}

export interface UpdateDemandeInput {
  villeDepart?: string;
  villeArrivee?: string;
  dateLimite?: string;
  poidsEstime?: number;
  description?: string;
}

export interface DemandeFilters {
  villeDepart?: string;
  villeArrivee?: string;
  statut?: DemandeStatut;
}import type { User } from './user';
import type { Voyage } from './voyage';
import type { Demande } from './demande';

export interface Favori {
  id: number;
  user: User;
  voyage: Voyage | null;
  demande: Demande | null;
  createdAt: string;
}export * from './user';
export * from './voyage';
export * from './demande';
export * from './message';
export * from './notification';
export * from './favori';
export * from './avis';
export * from './signalement';
export * from './api';import type { User } from './user';

export interface Message {
  id: number;
  expediteur: User;
  destinataire: User;
  contenu: string;
  lu: boolean;
  createdAt: string;
}

export interface SendMessageInput {
  destinataireId: number;
  contenu: string;
}

export interface Conversation {
  user: User;
  lastMessage: Message;
}export type NotificationType = 
  | 'matching_voyage' 
  | 'matching_demande' 
  | 'new_message' 
  | 'avis_recu' 
  | 'voyage_statut' 
  | 'demande_statut';

export interface Notification {
  id: number;
  type: NotificationType;
  titre: string;
  message: string;
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  data: Record<string, any> | null;
  lue: boolean;
  createdAt: string;
}import type { User } from './user';
import type { Voyage } from './voyage';
import type { Demande } from './demande';

export type SignalementMotif = 
  | 'contenu_inapproprie' 
  | 'spam' 
  | 'arnaque' 
  | 'objet_illegal' 
  | 'autre';

export type SignalementStatut = 'en_attente' | 'traite' | 'rejete';

export interface Signalement {
  id: number;
  signaleur: User;
  voyage: Voyage | null;
  demande: Demande | null;
  motif: SignalementMotif;
  description: string;
  statut: SignalementStatut;
  reponseAdmin: string | null;
  createdAt: string;
  updatedAt: string;
}

export interface CreateSignalementInput {
  voyageId?: number;
  demandeId?: number;
  motif: SignalementMotif;
  description: string;
}

export interface TraiterSignalementInput {
  statut: 'traite' | 'rejete';
  reponseAdmin?: string;
}export interface User {
  id: number;
  email: string;
  nom: string;
  prenom: string;
  telephone: string | null;
  photo: string | null;
  bio: string | null;
  emailVerifie: boolean;
  telephoneVerifie: boolean;
  roles: string[];
  createdAt: string;
  updatedAt: string;
}

export interface RegisterInput {
  nom: string;
  prenom: string;
  email: string;
  password: string;
  telephone: string;
}

export interface LoginInput {
  email: string;
  password: string;
}

export interface UpdateUserInput {
  nom?: string;
  prenom?: string;
  telephone?: string;
  bio?: string;
  photo?: string;
}

export interface ChangePasswordInput {
  currentPassword: string;
  newPassword: string;
}import type { User } from './user';

export type VoyageStatut = 'actif' | 'complet' | 'termine' | 'annule';

export interface Voyage {
  id: number;
  voyageur: User;
  villeDepart: string;
  villeArrivee: string;
  dateDepart: string;
  dateArrivee: string;
  poidsDisponible: string;
  description: string | null;
  statut: VoyageStatut;
  createdAt: string;
  updatedAt: string;
}

export interface CreateVoyageInput {
  villeDepart: string;
  villeArrivee: string;
  dateDepart: string;
  dateArrivee: string;
  poidsDisponible: number;
  description?: string;
}

export interface UpdateVoyageInput {
  villeDepart?: string;
  villeArrivee?: string;
  dateDepart?: string;
  dateArrivee?: string;
  poidsDisponible?: number;
  description?: string;
}

export interface VoyageFilters {
  villeDepart?: string;
  villeArrivee?: string;
  dateDepart?: string;
  statut?: VoyageStatut;
}